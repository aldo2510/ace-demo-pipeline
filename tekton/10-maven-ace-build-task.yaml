apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ace-build
spec:
  # The security and environment settings are needed for OpenShift in a non-default
  # namespace such as cp4i. Kaniko is expecting to be root in the container.
  stepTemplate:
    securityContext:
      runAsUser: 0
    env:
      - name: "HOME"
        value: "/tekton/home"
      - name: "LICENSE"
        value: "accept"
  params:
    - name: outputRegistry
      type: string
    - name: url
      type: string
    - name: revision
      type: string
    - name: buildImage
      type: string
    - name: runtimeBaseImage
      type: string
  results:
    - name: tag
      description: image tag of the form 20240220135127-6fe9106
  steps:
    - name: clone
      image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.18.1
      script: |
        #!/bin/sh

        set -e # Fail on error
        cd /work
        git clone -b $(params.revision) $(params.url)
        cd ace-demo-pipeline
        export DATE=$(date '+%Y%m%d%H%M%S')
        export COMMIT=$(git log -1 --pretty=%h)
        export TAG="$DATE"-"$COMMIT"
        echo Setting container tag to "$TAG"
        echo -n "$TAG" > $(results.tag.path)

        # Slightly hacky but works . . . 
        chmod -R 777 /work/ace-demo-pipeline
      volumeMounts:
        - mountPath: /work
          name: work
    - name: maven-build
      image: $(params.buildImage)
      script: |
        #!/bin/bash
        export LICENSE=accept
        . /opt/ibm/ace-12/server/bin/mqsiprofile
        export PATH=/opt/ibm/ace-12/common/jdk/bin:$PATH
        which javac
        javac -version
        mkdir /work/maven-output
        cd /work/ace-demo-pipeline
        id
        mvn --no-transfer-progress -Dinstall.work.directory=/work/maven-output/ace-server install
      volumeMounts:
        - mountPath: /work
          name: work
    - name: component-test
      image: $(params.buildImage)
      script: |
        #!/bin/bash
        export LICENSE=accept
        . /opt/ibm/ace-12/server/bin/mqsiprofile
        export PATH=/opt/ibm/ace-12/common/jdk/bin:$PATH
        # Slightly hacky, but quicker than building everything again!
        (cd /work/maven-output/ace-server/run && tar -cf - * ) | (cd /home/aceuser/ace-server/run && tar -xf - )
        # Set up credentials for the component tests; init-creds.sh looks in /tmp for policy
        cp /work/ace-demo-pipeline/demo-infrastructure/TEAJDBC.policyxml /tmp/
        bash /work/ace-demo-pipeline/demo-infrastructure/init-creds.sh
        # Build and run the tests
        cd /work/ace-demo-pipeline/TeaRESTApplication_ComponentTest
        mvn --no-transfer-progress -Dct.work.directory=/home/aceuser/ace-server verify
      volumeMounts:
        - mountPath: /work
          name: work
        - name: secret-volume-2
          mountPath: /var/run/secrets/jdbc
    - name: next-stage-container-setup
      image: $(params.buildImage)
      script: |
        #!/bin/bash
        cd /work/maven-output
        cp /work/ace-demo-pipeline/tekton/Dockerfile Dockerfile
        echo Contents of /work/maven-output/ace-server/server.components.yaml
        cat /work/maven-output/ace-server/server.components.yaml || /bin/true
      volumeMounts:
        - mountPath: /work
          name: work
    - name: docker-build-and-push
      image: quay.io/buildah/stable:v1
      #image: registry.redhat.io/rhel8/buildah:8.9-5
      securityContext:
        runAsUser: 0
        # Needed for hostPath volumes on OpenShift
        #privileged: true
        capabilities:
          add: ["CHOWN", "DAC_OVERRIDE","FOWNER","SETFCAP","SETGID","SETUID"]
      # specifying DOCKER_CONFIG is required to allow buildah to detect docker credential
      env:
        - name: "DOCKER_CONFIG"
          value: "/tekton/home/.docker/"
      script: |
        date
        export TAG=`cat $(results.tag.path)`
        echo Using $TAG as image tag
        buildah --storage-driver=overlay bud --format=oci --tls-verify=false --no-cache \
          --build-arg BASE_IMAGE=$(params.runtimeBaseImage) \
          -f /work/maven-output/Dockerfile -t $(params.outputRegistry)/tea-tekton:$TAG /work/maven-output
        date
        buildah  --storage-driver=overlay push --tls-verify=false --digestfile /tmp/image-digest \
          $(params.outputRegistry)/tea-tekton:$TAG  "docker://$(params.outputRegistry)/tea-tekton:$TAG"
        date
      volumeMounts:
        - mountPath: /work
          name: work
        - name: varlibcontainers
          mountPath: /var/lib/containers
  volumes:
    - name: work
      emptyDir: {}
    - name: secret-volume-2
      secret:
        secretName: jdbc-secret
    # 
    # Default buildah approach using emptyDir; takes about 2 minutes on a test SNO cluster
    # 
    - name: varlibcontainers
      emptyDir: {}
    # 
    # Local directory for this pipeline; takes a few seconds after initial pull
    # 
    #- name: varlibcontainers
    #  hostPath:
    #    path: '/var/hostPath/buildah-cache'
    #    type: Directory
    # 
    # Sharing the host containers; takes a few seconds
    # 
    #- name: varlibcontainers
    #  hostPath:
    #    path: '/var/lib/containers'
    #    type: Directory
    # 
    # Local disk using LVM operator on SNO; same speed as hostPath
    # 
    #- name: varlibcontainers
    #  persistentVolumeClaim:
    #    claimName: buildah-cache
    # 
    # NFS mount from same subnet; initial pull took 35 minutes, and
    # subsequent builds took around 9 minutes.
    #
    # May also see messages like
    #
    #    time="2024-02-15T00:55:11Z" level=error msg="'overlay' is not supported over nfs at \"/var/lib/containers/storage/overlay\""
    # 
    # or possibly failing with
    #
    # time="2024-02-15T20:05:58Z" level=warning msg="Network file system detected as backing store. Enforcing overlay option `force_mask=\"700\"`. Add it to storage.conf to silence this warning"
    # Error: mount /var/lib/containers/storage/overlay:/var/lib/containers/storage/overlay, flags: 0x1000: permission denied
    # time="2024-02-15T20:05:58Z" level=warning msg="Network file system detected as backing store. Enforcing overlay option `force_mask=\"700\"`. Add it to storage.conf to silence this warning"
    # time="2024-02-15T20:05:58Z" level=warning msg="failed to shutdown storage: \"mount /var/lib/containers/storage/overlay:/var/lib/containers/storage/overlay, flags: 0x1000: permission denied\""
    #
    # if not running privileged
    #- name: varlibcontainers
    #  persistentVolumeClaim:
    #    claimName: buildah-cache-nfs
