apiVersion: v1
kind: ServiceAccount
metadata:
  name: cp4i-tekton-service-account
  namespace: cp4i
imagePullSecrets:
  - name: ibm-entitlement-key
secrets:
  - name: ibm-entitlement-key
---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: el-sel-clusterrole
rules:
- apiGroups: ["triggers.tekton.dev"]
  resources: ["eventlisteners", "events", "clusterinterceptors", "interceptors", "clustertriggerbindings", "pipelineruns", "triggerbindings", "triggertemplates", "triggers"]
  verbs: ["get", "create","list", "watch"]
- apiGroups: [""]
  resources: ["configmaps", "events", "secrets"]
  verbs: ["get", "create", "patch", "list", "watch"]
- apiGroups: [""]
  resources: ["serviceaccounts"]
  verbs: ["impersonate"]


---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: el-mul-ClusterRoleBinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: el-sel-clusterrole
subjects:
- kind: ServiceAccount
  name: cp4i-tekton-service-account
  namespace: cp4i

---
# Needed for OpenShift registry pushes
# Note that the project for the container must match the namespace for the Tekton pipeline
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system-image-builder-clusterrole-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'system:image-builder'
subjects:
- kind: ServiceAccount
  name: cp4i-tekton-service-account
  namespace: cp4i