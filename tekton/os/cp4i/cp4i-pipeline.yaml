apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cp4i-pipeline
  namespace: cp4i
spec:
  params:
    - name: dockerRegistry
      type: string
      default: "image-registry.openshift-image-registry.svc.cluster.local:5000/default"
    - name: url
      type: string
      default: "https://github.com/ot4i/ace-demo-pipeline"
    - name: revision
      type: string
      default: "main"
    - name: buildImage
      type: string
      default: "cp.icr.io/cp/appc/ace:12.0.11.0-r1"
      #default: "image-registry.openshift-image-registry.svc.cluster.local:5000/default/ace-minimal-build:12.0.10.0-alpine"
    - name: runtimeBaseImage
      type: string
      default: "cp.icr.io/cp/appc/ace-server-prod:12.0.11.1-r1-20240125-170703"
      #default: "image-registry.openshift-image-registry.svc.cluster.local:5000/default/ace-server-prod:12.0.11.1-r1-20240125-170703"
  tasks:
    - name: build-from-source
      taskRef:
        name: cp4i-build
      params:
        - name: outputRegistry
          value: $(params.dockerRegistry)
        - name: url
          value: $(params.url)
        - name: revision
          value: $(params.revision)
        - name: buildImage
          value: $(params.buildImage)
        - name: runtimeBaseImage
          value: $(params.runtimeBaseImage)
    - name: component-test-in-cp4i
      taskRef:
        name: component-test-in-cp4i
      params:
        - name: dockerRegistry
          value: $(params.dockerRegistry)
        - name: url
          value: $(params.url)
        - name: revision
          value: $(params.revision)
        - name: tag
          value: "$(tasks.build-from-source.results.tag)"
        - name: ctsha
          value: "$(tasks.build-from-source.results.ctsha)"
      runAfter:
        - build-from-source
    - name: deploy-to-cp4i
      taskRef:
        name: deploy-to-cp4i
      params:
        - name: dockerRegistry
          value: $(params.dockerRegistry)
        - name: url
          value: $(params.url)
        - name: revision
          value: $(params.revision)
        - name: tag
          value: "$(tasks.build-from-source.results.tag)"
        - name: sha
          value: "$(tasks.build-from-source.results.sha)"
      runAfter:
        - component-test-in-cp4i
