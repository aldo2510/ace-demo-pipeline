apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cp4i-pipeline
  namespace: cp4i
spec:
  params:
    - name: dockerRegistry
      type: string
      default: "image-registry.openshift-image-registry.svc.cluster.local:5000/cp4i"
    - name: appName
      type: string
      default: "tea-tekton-cp4i"
    - name: appNamespace
      type: string
      default: "cp4i"
    - name: url
      type: string
      default: "https://github.com/ot4i/ace-demo-pipeline"
    - name: gitops-url
      type: string
      default: "https://github.com/mrislam11378/ace-demo-gitops.git"
    - name: revision
      type: string
      default: "main"
    - name: updateGitOpsRepo
      type: string
      default: "false"
    - name: buildImage
      type: string
      default: "cp.icr.io/cp/appc/ace:13.0.4.0-r1"
      #default: "image-registry.openshift-image-registry.svc.cluster.local:5000/cp4i/ace-minimal-build:13.0.4.0-alpine"
    - name: runtimeBaseImage
      type: string
      default: "cp.icr.io/cp/appc/ace-server-prod:13.0.4.0-r1-20250621-111331"
      #default: "image-registry.openshift-image-registry.svc.cluster.local:5000/cp4i/ace-server-prod:13.0.4.0-r1-20250621-111331"
    - name: tools-image
      type: string
      default: "image-registry.openshift-image-registry.svc.cluster.local:5000/cp4i/tools-image:20250818"
  tasks:
    - name: build-from-source
      taskRef:
        name: cp4i-build
      params:
        - name: outputRegistry
          value: $(params.dockerRegistry)
        - name: appName
          value: $(params.appName)
        - name: url
          value: $(params.url)
        - name: revision
          value: $(params.revision)
        - name: buildImage
          value: $(params.buildImage)
        - name: runtimeBaseImage
          value: $(params.runtimeBaseImage)
    - name: deploy-to-cp4i
      taskRef:
        name: deploy-to-cp4i
      when:
        - input: "$(params.updateGitOpsRepo)"
          operator: in
          values: ["false"]
      params:
        - name: dockerRegistry
          value: $(params.dockerRegistry)
        - name: appName
          value: $(params.appName)
        - name: appNamespace
          value: $(params.appNamespace)
        - name: url
          value: $(params.url)
        - name: revision
          value: $(params.revision)
        - name: tag
          value: "$(tasks.build-from-source.results.tag)"
        - name: sha
          value: "$(tasks.build-from-source.results.sha)"
      runAfter:
        - build-from-source
    - name: update-gitops-repo
      taskRef:
        name: update-gitops-repo
      when:
        - input: "$(params.updateGitOpsRepo)"
          operator: in
          values: ["true"]
      params:
        - name: dockerRegistry
          value: $(params.dockerRegistry)
        - name: appName
          value: $(params.appName)
        - name: appNamespace
          value: $(params.appNamespace)
        - name: url
          value: $(params.gitops-url)
        - name: revision
          value: $(params.revision)
        - name: tag
          value: "$(tasks.build-from-source.results.tag)"
        - name: sha
          value: "$(tasks.build-from-source.results.sha)"
        - name: tools-image
          value: $(params.tools-image)
      runAfter:
        - build-from-source
